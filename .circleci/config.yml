version: 2

jobs:
  test:
    docker:
      - image: circleci/golang:latest
    working_directory: ~/build/signatory
    steps:
      - checkout
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Unit tests
          command: |
            export GO111MODULE=on

            ./cc-test-reporter before-build

            for pkg in $(go list ./... | grep -v vendor); do
              go test -coverprofile=$(echo $pkg | tr / -).cover $pkg
            done

            mod=$(cat go.mod | awk '/^module/ {print $2}')
            echo "mode: set" > c.out

            if ls ./*.cover >/dev/null 2>&1; then
              grep -h -v "^mode:" ./*.cover >> c.out
              rm -f *.cover
            fi

            ./cc-test-reporter -p "${mod}/" after-build
  integration:
    machine:
        enabled: true
    working_directory: ~/integration-tests/signatory
    steps:
      - checkout:
          path: ~/integration-tests/signatory
      - run:
          name: Pull Tezos
          command: docker pull tezos/tezos:mainnet-staging
      - run:
          name: Build integration test image
          command: docker build -t signatory-integration -f integration/Dockerfile .
      - run:
          name: Run integration test
          command: |
            docker run \
            --network host \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e AZURE_CLIENT_ID=$AZURE_CLIENT_ID \
            -e AZURE_CLIENT_SECRET=$AZURE_CLIENT_SECRET \
            -e AZURE_RESOURCE=$AZURE_RESOURCE \
            -e AZURE_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID \
            -e AZURE_TENANT_ID=$AZURE_TENANT_ID \
            -e AZURE_VAULT=$AZURE_VAULT \
            -e KMS_CREDENTIALS="$KMS_CREDENTIALS" \
            -e KMS_PROJECT=$KMS_PROJECT \
            -e KMS_LOCATION=$KMS_LOCATION \
            -e KMS_KEY_RING=$KMS_KEY_RING \
            -e YUBI_ADDRESS=$YUBI_ADDRESS \
            -e YUBI_PASSWORD=$YUBI_PASSWORD \
            -e YUBI_AUTH_KEY_ID=$YUBI_AUTH_KEY_ID \
            signatory-integration    
  publish:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t ecadlabs/signatory:$CIRCLE_TAG -e GIT_REVISION=$CIRCLE_SHA1 -e GIT_BRANCH=$CIRCLE_BRANCH -e GIT_VERSION=$CIRCLE_TAG -f cmd/signatory .
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Publish image to Docker Hub
          command: docker push ecadlabs/signatory:$CIRCLE_TAG
      - run:
          name: Add latest tag to docker image
          command: docker tag ecadlabs/signatory:$CIRCLE_TAG ecadlabs/signatory:latest && docker push ecadlabs/signatory:latest
workflows:
  version: 2
  test:
    jobs:
      - test
      - integration
  publish:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
